# Bu iş akışı, bir commit ana dalınıza gönderildiğinde bir Node.js uygulamasını Azure Web App'e oluşturur ve gönderir.
#
# Bu iş akışı, hedef Azure App Service web uygulamasını zaten oluşturduğunuzu varsayar.
# Talimatlar için bkz. https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# Bu iş akışını yapılandırmak için:
#
# 1. Azure Web App'iniz için Yayınlama Profili'ni indirin. Bu dosyayı Azure Portal'daki Web Uygulamanızın Genel Bakış sayfasından indirebilirsiniz.
#    Daha fazla bilgi için: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Depolarınızda AZURE_WEBAPP_PUBLISH_PROFILE adlı bir gizli anahtar oluşturun, gizli anahtarın değeri olarak yayınlama profili içeriğini yapıştırın.
#    Yayınlama profili elde etme talimatları için bkz: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. AZURE_WEBAPP_NAME değerini değiştirin. İsteğe bağlı olarak, aşağıdaki AZURE_WEBAPP_PACKAGE_PATH ve NODE_VERSION ortam değişkenlerini değiştirin.
#
# Azure için GitHub Actions hakkında daha fazla bilgi için: https://github.com/Azure/Actions
# Azure Web Apps Deploy işlemi hakkında daha fazla bilgi için: https://github.com/Azure/webapps-deploy
# Azure'a dağıtmak için GitHub Action iş akışlarına başlamak için daha fazla örnek için: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name    # uygulamanızın adını buraya yazın
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # web uygulamanızın projesinin yolunu buraya yazın, varsayılan olarak depo kök dizini
  NODE_VERSION: '14.x'                # kullanmak istediğiniz Node sürümünü buraya yazın

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: 'Deploy to Azure WebApp'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
